version: '3'

services:

  webservice:
    build:
      context: './webService'
      dockerfile: Dockerfile
    image: nodejs
    container_name: webservice
    restart: always
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "88:8080"
    volumes:
      - ./webService:/home/node/app
    #   - ./webService/node_modules:/home/node/app/node_modules
    networks:
      - app-network
    # command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon ./webService/app.js 

  nodejsAPP:
    build:
      context: './nodeAPP'
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejsAPP
    restart: always
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "888:8080"
    volumes:
      - ./nodeAPP:/home/node/app
    #   - ./nodeAPP/node_modules:/home/node/app/node_modules
    networks:
      - app-network
    # command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon ./nodeAPP/app.js 

  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:     
      - dbdata:/data/db
    networks:
      - app-network  

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:  